#!/bin/bash -xe

linking_key="{{.LinkingKey}}"
api_ip="{{.ApiIP}}"
api_port="{{.ApiPort}}"
# This is the port set when the app was compiled. Do not change.
redirector_port="{{.RedirectorPort}}"
# This port can be freely changed to change the port that the redirector listens on.
external_redirector_port="{{.ExternalPort}}"
tar_file="redirector.tar"

rm -f $tar_file

docker=$(which docker || echo "not found")
wget=$(which wget || echo "not found")

if [ -x "$docker" ]; then
    echo "Docker Check OK"
else
	# Remove conflicting Docker packages
	for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
	apt-get remove -y $pkg
	done

	# Install Docker
	apt update
	apt install -y ca-certificates curl
	install -m 0755 -d /etc/apt/keyrings
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
	chmod a+r /etc/apt/keyrings/docker.asc

	echo \
	"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
	$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
	tee /etc/apt/sources.list.d/docker.list > /dev/null

	apt-get update
	apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

	systemctl enable --now docker
	docker --version
fi

daemon_file="/etc/docker/daemon.json"
desired_config='{"ipv6": true, "fixed-cidr-v6": "2001:db8:1::/64"}'

if [ -f "$daemon_file" ]; then
    current_config=$(jq -c . < "$daemon_file" 2>/dev/null || echo "{}")
    normalized_desired_config=$(echo "$desired_config" | jq -c .)

    if [ "$current_config" != "$normalized_desired_config" ]; then
        echo "Updating Docker daemon.json..."
        echo "$normalized_desired_config" > "$daemon_file"
        systemctl restart docker
    else
        echo "Docker daemon.json already configured as desired. Skipping update and restart."
    fi
else
    echo "Creating Docker daemon.json with desired configuration..."
    echo "$desired_config" > "$daemon_file"
    systemctl restart docker
fi

if [ -x "$wget" ]; then
    echo "wget Check OK"
else
	apt install -y wget
fi

wget --no-check-certificate https://$api_ip:$api_port/fileserver/$tar_file
docker load -i $tar_file
docker run -d \
	-p $external_redirector_port:$redirector_port \
	-e MAIN_SERVER_IP="{{.ForwardIP}}" \
	-e MAIN_SERVER_PORT="{{.ForwardPort}}" \
	-e FORWARDER_PORT="$redirector_port" \
	-e LINKING_KEY="$linking_key" \
	-e API_IP="$api_ip" \
	-e API_PORT="$api_port" \
	-v ./logs:/app/logs \
	patronc2/redirector
