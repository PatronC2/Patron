services:
  patron_c2_server:
    image: patron_c2_server
    build:
      context: .
      dockerfile: Dockerfile.server
    restart: always
    volumes:
      - .env:/app/.env
      - ./logs:/app/logs
      - ./certs:/app/certs
    networks:
      - internal_c2_network
    ports:
      - "${C2SERVER_PORT}:${C2SERVER_PORT}"
    depends_on:
      patron_c2_postgres:
        condition: service_healthy

  patron_c2_api:
    image: patron_c2_api
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: always
    volumes:
      - .env:/app/.env
      - ./logs:/app/logs
      - ./payloads:/app/payloads
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal_c2_network
    depends_on:
      patron_c2_postgres:
        condition: service_healthy

  patron_c2_frontend:
    image: node:22-alpine
    command: sh -c "npm install && npm start"
    working_dir: /app
    restart: always
    volumes:
      - ./ui:/app
      - ./logs:/app/logs
    networks:
      - internal_c2_network
    depends_on:
      - patron_c2_api

  patron_c2_postgres:
    image: postgres:latest
    restart: always
    container_name: patron_c2_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - internal_c2_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 10s
      retries: 5

  patron_c2_nginx:
    image: nginx_frontend
    build:
      context: .
      dockerfile: Dockerfile.nginx
    restart: always
    volumes:
      - ./nginx/conf.d/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./certs/server.pem:/etc/nginx/ssl/nginx.crt
      - ./certs/server.key:/etc/nginx/ssl/nginx.key
    environment:
      - REACT_SERVER=patron_c2_frontend:${REACT_SERVER_PORT}
      - API_SERVER=patron_c2_api:8000
    networks:
      - internal_c2_network
    ports:
      - "${REACT_APP_NGINX_PORT}:8443"

networks:
  internal_c2_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${DOCKER_INTERNAL}.0/16"